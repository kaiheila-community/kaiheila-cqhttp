name: Build

on: [push, pull_request]

jobs:
  build:
    name: Build and Test
    
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0'
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build ./src/kaiheila-onebot.csproj --configuration Release --no-restore
    - name: Test
      run: dotnet test ./test/kaiheila-onebot-test.csproj --no-restore --verbosity normal
      
  pack:
    name: Build Package
    
    needs: [build]
    
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0'
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build ./src/kaiheila-onebot.csproj --configuration Release --no-restore
    - name: Pack
      run: dotnet pack ./src/kaiheila-onebot.csproj -o src/bin/publish/ --configuration Release --no-restore
    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: kaiheila-onebot-nupkg-${{ github.sha }}
        path: src/bin/publish
        
  docker:
    name: Build Image
    
    needs: [build]
    
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Docker Build
      run: docker build -t kaiheila-onebot .
    - name: Export Image
      run: |
        mkdir image
        docker save kaiheila-onebot > ./image/kaiheila-onebot-docker.tar
    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: kaiheila-onebot-docker-${{ github.sha }}
        path: image

  publish:
    name: Build Binary
    
    strategy:
      matrix:
        target:
        - '{"rid":"win-x64","os":"windows-latest"}'
        - '{"rid":"win-x86","os":"windows-latest"}'
        - '{"rid":"win-arm","os":"windows-latest"}'
        - '{"rid":"win-arm64","os":"windows-latest"}'
        - '{"rid":"linux-x64","os":"ubuntu-latest"}'
        - '{"rid":"linux-arm","os":"ubuntu-latest"}'
        - '{"rid":"linux-arm64","os":"ubuntu-latest"}'
        - '{"rid":"osx-x64","os":"macos-latest"}'

    needs: [build]
    
    runs-on: ${{ fromJson(matrix.target).os }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0'
    - name: Publish
      run: dotnet publish src/kaiheila-onebot.csproj -o src/bin/${{ fromJson(matrix.target).rid }}/publish -c Release -r ${{ fromJson(matrix.target).rid }} --self-contained true -p:PublishReadyToRun=true -p:PublishSingleFile=true -p:PublishTrimmed=true -p:IncludeNativeLibrariesForSelfExtract=true
    - name: Remove pdb Files
      shell: bash
      run: rm src/bin/${{ fromJson(matrix.target).rid }}/publish/*.pdb
    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: kaiheila-onebot-${{ fromJson(matrix.target).rid }}-${{ github.sha }}
        path: src/bin/${{ fromJson(matrix.target).rid }}/publish
